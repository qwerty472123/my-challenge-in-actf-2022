from ring_signature import proof_curve, RangeProof, OTRS, deserialize4json, proof_H

E, G = proof_curve()
H = proof_H(E)

rp = RangeProof(OTRS(E, G), H)

with open("range_proof_from_carol.json", "r") as f:
    json = f.read()

C, proof = deserialize4json(E, json)
print("verfied" if rp.verify(C, 256, proof) else "FAKE PROOF!")

# Note: C is a Pedersen commitment for the x-coordinate of Carol's Public key.
# It generated by `rp.generate_commitment(__import__('secret').carol_pub[0])`.
